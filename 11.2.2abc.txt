import os
import time
import subprocess

def measure_network_quality(target, protocol, count):
    # Measure the rate of speed and packet loss
    command = f"ping -c {count} -q {target}"
    if protocol == "tcp":
        command = f"hping3 -S -c {count} -p 80 {target}"
    elif protocol == "udp":
        command = f"hping3 --udp -c {count} -p 53 {target}"

    result = subprocess.run(command, shell=True, capture_output=True, text=True)
    output = result.stdout

    # Extract relevant information from the output
    lines = output.strip().split("\n")
    if protocol == "icmp":
        statistics_line = lines[-2]
        values = statistics_line.split(",")
        packet_loss = float(values[2].split("%")[0].strip())
        rtt_line = lines[-1]
        rtt_values = rtt_line.split("=")[1].strip().split("/")
        avg_rtt = float(rtt_values[1])
    else:
        statistics_line = lines[-1]
        values = statistics_line.split(",")
        packet_loss = float(values[2].split("%")[0].strip())
        avg_rtt = float(values[3].split("=")[1].strip())

    # Calculate sending and receiving packet rates
    sending_rate = count / avg_rtt
    receiving_rate = (count - (count * packet_loss / 100)) / avg_rtt

    return avg_rtt, packet_loss, sending_rate, receiving_rate

def main():
    target = input("Enter the target IP address or domain: ")
    protocols = ["icmp", "tcp", "udp"]
    count = 100

    results = []

    for protocol in protocols:
        print(f"\nMeasuring network quality for {protocol.upper()} protocol...")
        avg_rtt, packet_loss, sending_rate, receiving_rate = measure_network_quality(target, protocol, count)
        results.append((protocol, avg_rtt, packet_loss, sending_rate, receiving_rate))

    print("\nNetwork Quality Measurement Results:")
    print("Protocol\tAvg RTT (ms)\tPacket Loss (%)\tSending Rate (req/s)\tReceiving Rate (req/s)")
    for result in results:
        protocol, avg_rtt, packet_loss, sending_rate, receiving_rate = result
        print(f"{protocol}\t\t{avg_rtt:.2f}\t\t{packet_loss:.2f}\t\t{sending_rate:.2f}\t\t\t{receiving_rate:.2f}")

if __name__ == "__main__":
    main()